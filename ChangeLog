2015-10-12  Marty Fouts  <martyfouts@users.noreply.github.com>

	* get-versions.sh: Fix detached head with git 2.4+

2014-11-03  Ola Jeppsson  <ola@adapteva.com>

	* README: Update version numbers and URLs.
	* define-release.sh: Bump to -rc2
	* toolchain-components: Fix release tag prefixes
	* sdk-components: Likewise

2014-10-03  Ola Jeppsson  <ola@adapteva.com>

	* build-epiphany-sdk.sh: If we are cross compiling, instruct
	'build-toolchain.sh' to install the build-host toolchain inside
	the 'builds' directory. Do not install to '/opt/adapteva'. This
	would break the build when the user did not have write permissions.
	Also, ensure that the toolchain is in PATH so 'install-sdk.sh'
	will find it.
	* build-toolchain.sh: Remove an erroneous and effectively no-op PATH
	statement.
	* install-sdk.sh: Only guess Epiphany toolchain's path when it is
	not already in the path.
	(check_toolchain): Helper function. Checks if a specific toolchain is
	available.

2014-10-31  Ola Jeppsson  <ola@adapteva.com>

	* get-versions.sh: Fix arbitrary branch checkout failures when
	we're in detached state. If possible, use the original branch
	name [which originates from a components definition file so it better
	exist] before adjusting for release tag, as a first guess. That
	should be better than checking out an arbitrary branch performance-wise.

2014-10-31  Ola Jeppsson  <ola@adapteva.com>

	* setup.csh: Fix undefined MANPATH warning

2014-10-31  Ola Jeppsson  <ola@adapteva.com>

	* Create 2014.11 branch
	* define-release.sh: Bump version
	* sdk-components: Bump epiphany-libs branch

2014-10-31  Ola Jeppsson  <ola@adapteva.com>

	* build-epiphany-sdk.sh: Add a release (-R) flag. This flag will
	propagate (as --release) through the whole build and ensure that
	the right release tag, defined in 'define-release.sh', is checked
	out for all components.
	* build-toolchain.sh: Support --release flag. Pass it on to
	get-versions.sh. Also pass 'toolchain-components' to get-versions.sh
	* component-versions: Rename to 'toolchain-components'.
	* toolchain-components: Add more detailed definitions of
	toolchain components.
	* sdk-components: New file. Add definitions for epiphany-libs and
	parallella-linux.
	* define-release.sh: Slight change of version numbering. Add
	comments. Export RELEASE_TAG.
	* download-toolchain.sh: Support release flag. Replace hardcoded
	component downloads with one call to new download_components
	function.
	(github_tool): Add (optional) release prefix paramater. Adjust for
	tag release prefix parameter (if any) when "--release" is set.
	We need to do this for repositories with multiple heads (currently
	only 'epiphany-binutils-gdb'.
	(download_components): New function. It will download all
	toolchain components defined in 'toolchain-components'.
	* get-versions.sh: Add mandatory componentfile argument. Support
	release flag. Adjust release prefix parameter if needed when in
	release mode.
	* install-sdk.sh: Remove -d flag. Rename --release flag to
	--no-debug. Add new --release flag for release mode. Use
	get-components.sh to checkout right version SDK components defined
	in 'sdk-components'.

2014-10-30  Ola Jeppsson  <ola@adapteva.com>

	* setup.sh: Add MANPATH
	* setup.csh: Likewise

2014-10-29  Ola Jeppsson  <ola@adapteva.com>

	* install-sdk.sh: Don't export CROSS_COMPILE unless it's necessary

2014-10-29  Ola Jeppsson  <ola@adapteva.com>

	* build-epiphany-sdk.sh: Download and build Epiphany multicore
	simulator by default.
	* build-toolchain.sh: Support building and installing the
	multicore simulator so that it doesn't conflict with GDB from the
	toolchain.
	* component-versions: Track the Epiphany multicore simulator
	branch.
	* download-toolchain.sh: Add option to download multi-core
	simulator.

2014-10-28  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-toolchain.sh: Remove RPATH functionality. Irrelevant to a
	static toolchain.

2014-10-24  Ola Jeppsson  <ola@adapteva.com>

	* install-sdk.sh: Don't install sudo wrapper scripts

2014-10-24  Ola Jeppsson  <ola@adapteva.com>

	* build-toolchain.sh: Add staging directory for things we need for
	building but don't want to include in the SDK.
	Install ncurses to staging area so it doesn't end up in the SDK.
	Skip building and installing things we don't need from ncurses.
	Use system's terminfo path as fallback.
	* build-epiphany-sdk.sh: Add two new flags, one (-d) for enabling
	debug symbols and (-C) for cleaning before building. Make sure
	they propagate throughout the whole build process.
	* install-sdk.sh: Add clean flag (-C, --clean).

2014-10-22  Ola Jeppsson  <ola@adapteva.com>

	* build-toolchain.sh: Don't install programs from ncurses

2014-10-20  Ola Jeppsson  <ola@adapteva.com>

	* install-sdk.sh: Install 'libe-trace.so', needed by e-trace-server.

2014-10-14  Ola Jeppsson <ola@adapteva.com>

	* install-sdk.sh: Remove the following flags: -a, --arch, --arm,
	--x86, -t and --toolprfx. --host <arch-triplet> is sufficient now.
	Use uname to figure out buildarch automatically.  Compare
	buildarch and hostarch to determine if we're cross-compiling. If
	we are, make sure to set the right PATH so we use the
	buildarch->targetarch compiler (and not hostarch->targetarch
	compiler).  Verify that buildarch->targetarch toolchain is
	present.  If we're doing Canadian cross, verify that
	buildarch->hostarch toolchain is present.
	* build-epiphany-sdk.sh: Pass hostarch triplet to install-sdk.sh
	when doing Canadian cross compilation.
	* build-toolchain.sh: Use uname to determine buildarch.  Install
	newlib for buildarch->targetarch compiler when doing Canadian
	cross compilation. Some header files were missing
	(e.g. <sys/types.h>).

2014-10-08  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-epiphany-sdk.sh: Default ARCH is armv7l.  Allow
	specification of host triplet and pass to compiler build.

2014-09-29  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-toolchain.sh: Consistent use of armv7l throughout. Add
	ncurses support.
	* downlaod-toolchain.sh: Also download ncurses source.

2014-09-29  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-toolchain.sh: ARM architecture changed to armv7l from armv7.

2014-09-28  Ben Chaco  <bchaco@x3-c.com>

	* build-epiphany-sdk.sh: Updates to support latest Epiphany Toolchain
	build.
	* install-sdk.sh: Likewise.

2014-09-25  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-toolchain.sh: Only link /opt/adapteva/esdk if it is part
	of install directory. Correct test for forcing a clean build

2014-09-25  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-toolchain.sh: Fix problems with directory naming and
	linking.

2014-09-24  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-toolchain.sh: Correct synonyms of build-dir, install-dir
	and datestamp-install to refer to the host.

2014-09-23  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* component-versions: Changed to software-cache versions of
	binutils, gcc, cgen and newlib.
	* download-toolchain.sh: Likewise.

2014-09-23  Simon Cook  <simon.cook@embecosm.com>

	* build-toolchain.sh: Build ncurses when Canadian Cross compiling.
	Add native build to path between stages when Canadian Cross compiling.

2014-09-22  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-epiphany-sdk.sh: Update fetching and building the
	toolchain, install toolchain in correct location rather than
	moving it, add copyright notice.

2014-09-22  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-toolchain.sh: Extend to support Canadian Cross building
	* component-versions: Update to use standard versions, which now
	include software-cache.
	* download-toolchain.sh: Update to use combined binutils-gdb
	repository.

2014-09-08  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-toolchain.sh: Check for configure existing as indication
	of previous successful configure.

2014-09-07  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-toolchain.sh: Added support for Canadian Cross with --host
	argument.

2014-09-07  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-toolchain.sh: Fix typo using == instead of = for test
	equality.

2014-09-07  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-toolchain.sh: Rewritten to support all new features
	requested by customers, except (in this verision) Canadian cross
	compilation.
	* component-versions: Created.
	* download-toolchain.sh: Put GCC infrastructure components in
	their own source directory.
	* get-versions.sh: Created.
	* rel-rpaths.sh: Created.
	* symlink-all: Deleted.
	* symlink-all.sh: Created.

2014-08-24  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* download-toolchain.sh: Change options --infra_url to --infra-url
	for consistency.

2014-08-22  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Rewrite of the download script to deal properly with GCC
	components.

	* define-release.sh: Created.
	* download-toolchain.sh: Make arguments comprehensive. Provide for
	download of all GCC components from official mirrors. Clean up
	shell functions.

2014-08-13  Andreas Olofsson <andreasd@adapteva.com>

	* build-epiphany-sdk.sh:
	Major integration/merge branch. Need to add 'tag' and 'branch'
	script arguments to build script to enable slicing across repos.

2014-07-17  Ben Chaco  <bchaco@x3-c.com>

	* build-epiphany-sdk.sh:
	Use EPIPHANY_BUILD_HOME environment variable for the build root.
	Tabified the script for consistency and because there were a mix
	of TAB and whitespace used.
	* install-sdk.sh:
	Changed VERSION variable name to BLD_VERSION for clarity.
	Added -t/--toolprfx script options to override CROSS_COMPILE
	environmrnt variable. Removed CROSS_PREFIX variable.
	Tabified the script for consistency and because there were a mix
	of TAB and whitespace used. Updated usage output.

2014-06-24  Ben Chaco  <bchaco@x3-c.com>

	* install-sdk.sh:
	Set CROSS_PREFIX and EPIPHANY_PREFIX env vars

2014-06-20  Ben Chaco  <bchaco@x3-c.com>

	* build-epiphany-sdk.sh:
	Change script name from build-sdk to install-sdk. Removed the creation
	of the docs and examples directories.
	* install-sdk.sh:
	Change script name from build-sdk to install-sdk.

2014-06-04  Ben Chaco  <bchaco@x3-c.com>

	* build-sdk.sh: Renamed to install-sdk.sh
	* build_scripts: Directory and contents removed
	* build-epiphany-sdk.sh: added
	* download-toolchain.sh: Modified so as not to fetch the epiphany-sdk repository
	* epiphany_build_jenkins.tar.gz: Updated for new build commands
	* install-sdk.sh: Check for -l option (libs path) and git clone epiphany-libs if needed

2014-05-28  Ben Chaco  <bchaco@x3-c.com>

	* build-sdk.sh: Fix ESDKPATH. Error handling, print environment
	settings

2014-05-26  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* build-sdk.sh: Add copyright declarations. Add command arguments
	to control host, paths and release/debug install. Remove bash
	specific dependencies.

2014-05-21  Ben Chaco  <bchaco@x3-c.com>

	* jenkins-epiphany: Added Jenkins install and config scripts

2014-05-14  Ben Chaco  <bchaco@x3-c.com>

	* build-sdk.sh: Copy libe-loader.so to host/lib
